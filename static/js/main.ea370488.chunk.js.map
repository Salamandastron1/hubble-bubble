{"version":3,"sources":["action-creators/errorReceived.js","thunks/imagesFetch.js","components/Header/Header.js","containers/PopUp/PopUp.js","action-creators/popUpToggle.js","containers/Game/Game.js","util/helper.js","components/Card/Card.js","containers/Study/Study.js","components/StarDetails/StarDetails.js","components/404/NotFound.js","containers/App/App.js","thunks/fetchStarIds.js","action-creators/toggleLoading.js","action-creators/astronomicalObjectsActions.js","serviceWorker.js","reducers/index.js","reducers/astronomicalObjectsReducer.js","reducers/isLoadingReducer.js","reducers/errorReducer.js","reducers/popUpReducer.js","index.js"],"names":["errorReceived","error","type","imagesFetch","stars","dispatch","unresolvedPromises","map","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","star","url","response","data","filteredImage","description","wrap","_context","prev","next","concat","id","fetch","sent","ok","Error","message","json","filterImages","image_files","replace","abrupt","name","file_url","selected","t0","stop","this","_x","apply","arguments","Promise","all","find","image","includes","width","Header","props","react_default","createElement","className","NavLink","to","connect","undefined","closePopUp","nextQuestion","correct","onClick","style","backgroundImage","Game","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","buttonSelected","randomIndices","subject","setState","selectedAnswer","answers","imageSelection","handleSubmit","imageId","radioId","togglePopUp","objectSpread","state","inherits","createClass","key","value","_this2","_this$props","astronomicalObjects","isLoading","popUp","_this$state","length","questions","i","randomIndice","Math","floor","random","push","makeQuestions","randomAnswers","number","checked","onChange","htmlFor","answerSubject","onSubmit","e","preventDefault","containers_PopUp_PopUp","Component","Card","Link","filter","cards","components_Card_Card","src","alt","height","NotFound","App","fetchStarIds","_this$props2","history","Switch","Route","exact","path","component","render","match","object","parseInt","params","components_StarDetails_StarDetails","Study","withRouter","starIds","starData","Boolean","window","location","hostname","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","BrowserRouter","containers_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea370488.chunk.js","sourcesContent":["export const errorReceived = error => ({\n  type: 'ERROR_RECEIVED',\n  error\n})","import { errorReceived } from '../action-creators/errorReceived'\n\nexport const imagesFetch = stars => {\n  return dispatch => {\n    const unresolvedPromises = stars.map(async star => {\n      try {\n        const url = `https://cors-anywhere.herokuapp.com/http://hubblesite.org/api/v3/image/${star.id}`\n        const response = await fetch(url)\n        if(!response.ok) {\n          throw Error(response.message)\n        } else {\n          const data = await response.json()\n          const filteredImage = filterImages(data.image_files)\n          const description = data.description.replace(/<(\\/)?strong([^>]*)>/g, '').replace(/<(\\/)?p([^>]*)>/g, '');\n          \n          return {name: data.name, description: description, image_files: filteredImage.file_url, id: star.id, selected: false}\n        }\n      } catch(e) {\n        dispatch(errorReceived(e.message))\n      }\n    })\n    return Promise.all(unresolvedPromises)\n  }\n}\n\nexport const filterImages = data => {\n  return data.find(image => {\n    if(image.file_url.includes('.png') && image.width >= 500) {\n      return image\n    } else if (image.file_url.includes('.jpg') && image.width >= 500) {\n      return image\n    } else if (image.file_url.includes('.png') && image.width >= 565){\n      return image\n    } else {\n      return null\n    }\n  })\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport './Header.css'\n\nconst Header = (props) => {\n  return (\n    <section className='begin-game'>\n      <div className='planet-orbit'>\n      </div>\n      <div className='button-text'>\n        <NavLink \n          className='game-nav'\n          to='/hubble-bubble/gametime'>\n          Start!!! \n        </NavLink>\n      </div>\n      <div className='planet-orbit'>\n      </div>\n    </section>\n  )\n}\n\nexport default Header;","import React from 'react'\nimport { popUpToggle } from '../../action-creators/popUpToggle'\nimport { connect } from 'react-redux'\nimport './PopUp.css'\n\nexport const PopUp = (props) => {\n  const { star, nextQuestion, closePopUp, correct } = props\n\n  return (\n    <section className='popup-outer'>\n      <div className='popup-inner'>\n      {correct ?\n        <h2 className='response'>WOW YOU'RE RIGHT</h2>\n        : <h2 className='response'>Noooooot quite :)</h2>}\n        <h2\n          className='name-star'\n        >{star.name}</h2>\n        <button\n          className='next-question'\n          onClick={() => {\n            closePopUp();\n            nextQuestion()\n          }}\n        >\n          X\n        </button>\n        <div\n          className='pop-up-image'\n          style={{backgroundImage: `url(${star.image_files})`}}>\n        </div>\n        <p \n          className='description'\n        >\n          {star.description}\n        </p>\n      </div>\n    </section>\n  )\n}\n\nexport const mapDispatchToProps = dispatch => ({\n  closePopUp: () => dispatch(popUpToggle())\n})\n\nexport default connect(undefined, mapDispatchToProps)(PopUp)","export const popUpToggle = () => ({\n  type: 'POPUP_TOGGLE',\n})","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { makeQuestions } from '../../util/helper'\nimport PopUp from '../PopUp/PopUp'\nimport { popUpToggle } from '../../action-creators/popUpToggle'\nimport './Game.css'\n\nexport class Game extends Component {\n  constructor() {\n    super()\n    this.state = {\n      selectedAnswer: '',\n      answers: [],\n      imageSelection: null,\n      correct: false,\n    }\n  }\n\n  buttonSelected = (id, randomIndices, subject) => {\n    this.setState({\n      selectedAnswer: id,\n      answers: randomIndices,\n      imageSelection: subject,\n    })\n  }\n  nextQuestion = () => {\n    this.setState({\n      selectedAnswer: '',\n      answers: [],\n      imageSelection: null,\n      correct: false\n    })\n  }\n  handleSubmit = (imageId, radioId) => {\n    if(imageId === radioId) {\n      this.props.togglePopUp()\n      this.setState({\n        ...this.state,\n        correct: true\n      })\n    } \n    if(this.state.imageSelection !== null && imageId !== radioId) {\n      this.props.togglePopUp()\n      this.setState({\n        ...this.state\n      })\n    }\n  }\n\n  render () {\n    const { astronomicalObjects, isLoading, popUp } = this.props;\n    const { selectedAnswer, answers, imageSelection, correct } = this.state;\n    let randomIndices;\n    let subject;\n    if(answers.length > 1) {\n      randomIndices = answers\n      subject = imageSelection\n    } else {\n      randomIndices = makeQuestions(astronomicalObjects)\n      subject = Math.floor(Math.random() * Math.floor(randomIndices.length - 1))\n    }\n    const randomAnswers = randomIndices.map(number => {\n      return (            \n        <div \n          key={astronomicalObjects[number].id}>\n            <input\n              className={astronomicalObjects[number].name} \n              type='radio' \n              name='name' \n              value={astronomicalObjects[number].name} \n              checked={astronomicalObjects[number].id === selectedAnswer}\n              onChange={() => this.buttonSelected(astronomicalObjects[number].id, randomIndices, subject)}/>\n            <label \n              htmlFor={astronomicalObjects[number].name}>\n              {astronomicalObjects[number].name}\n            </label>\n        </div>\n      )\n    })\n  const answerSubject = astronomicalObjects[randomIndices[subject]];\n    if(isLoading) {\n      return (\n        <div className='spinner'>\n          <div className='star1'></div>\n          <div className='star2'></div>\n        </div>\n      )\n    } else {\n      return (\n        <section className='game'>\n          <div \n            className='bubble-image'\n            style={{backgroundImage: `url(${answerSubject.image_files})`}}>\n          </div>\n            <form\n              onSubmit={(e) => {\n                e.preventDefault()\n                this.handleSubmit(answerSubject.id, selectedAnswer)\n              }\n            }\n              className='game-form'>\n            <fieldset>\n              <legend>Which name matches the picture?</legend>\n                {randomAnswers}\n            </fieldset>\n            <input\n              className='submit' \n              type='submit' \n              value='Submit'/>\n          </form>\n          {popUp && \n            <PopUp\n              correct={correct} \n              star={answerSubject}\n              nextQuestion={this.nextQuestion}\n            />}\n        </section>\n      )\n    }\n  }\n}\n\nexport const mapStateToProps = state => ({\n  astronomicalObjects: state.astronomicalObjects,\n  isLoading: state.isLoading,\n  popUp: state.popUp,\n})\n\nexport const mapDispatchToProps = dispatch => ({\n  togglePopUp: () => dispatch(popUpToggle())\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Game)\n","export const makeQuestions = (stars) => {\n  let questions = [];\n  if(stars.length < 5 ) {\n    return questions\n  } else {\n    for(let i = 0; i < 4; i++) {\n      const randomIndice = Math.floor(Math.random() * Math.floor(stars.length - 1))\n      if(!questions.includes(randomIndice)){\n        questions.push(randomIndice)\n      } else {\n        i--\n      }\n    }\n    return questions\n  }\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './Card.css'\n\n\nconst Card = ({star}) => {\n  const { name, image_files, id } = star\n  return (\n    <Link \n      className='link'\n      to={`/hubble-bubble/studytime/${id}`}>\n      <article\n        style={{backgroundImage: `url(${image_files}`}} \n        className='card'>\n        <h4 \n          className='card-name'\n        >{name}</h4>\n      </article>\n    </Link>\n  )\n}\n\nexport default Card;","import React from 'react'\nimport { connect } from 'react-redux'\nimport Card from '../../components/Card/Card'\nimport './Study.css'\n\nexport const Study = props => {\n  const { astronomicalObjects, isLoading } = props\n  const cards = astronomicalObjects.map(star => {\n    return <Card star={star} key={star.id}/>\n  })\n  if(isLoading) {\n    return (\n      <div className='spinner'>\n        <div className='star1'></div>\n        <div className='star2'></div>\n      </div>\n    )\n  } else {\n    return (\n      <section className='card-container'>\n        {cards}\n      </section>\n    )\n  }\n}\n\nexport const mapStateToProps = state => ({\n  astronomicalObjects: state.astronomicalObjects,\n  filter: state.filter,\n  isLoading: state.isLoading\n})\n\nexport default connect(mapStateToProps)(Study)","import React from 'react'\nimport './StarDetails.css'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nexport const StarDetails = (props) => {\n  const { image_files, description, name, isLoading } = props\n  if(isLoading) {\n    return (\n      <div className='spinner'>\n        <div className='star1'></div>\n        <div className='star2'></div>\n      </div>\n    )\n  } else {\n    return(\n      <section className='individual-card'>\n        <Link \n          to='/hubble-bubble/studytime' \n          className='back-btn'\n        >\n          ◀ back\n        </Link>\n        <h2\n          className='individual-name'\n        >\n          {name}\n        </h2>\n        <img \n          src={image_files} \n          alt ={name}\n          height='500'\n          width='500'\n        />\n        <p\n          className='individual-description'\n        >\n          {description} \n        </p>\n      </section>\n    )\n  }\n}\n\nexport const mapStateToProps = state => ({\n  isLoading: state.isLoading\n})\nexport default connect(mapStateToProps)(StarDetails);","import React from 'react'\nimport './NotFound.css'\n\nexport const NotFound = () => {\n  return (\n    <div className='not-found'>\n      <h1 \n        className='not-found'> \n        404 Not Found \n      </h1>\n      <p>Why are you here? Move along, nothin to see</p>\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux'\nimport { fetchStarIds } from '../../thunks/fetchStarIds';\nimport { Switch, Route, withRouter, NavLink } from 'react-router-dom'\nimport Header from '../../components/Header/Header'\nimport Game from '../Game/Game'\nimport Study from '../Study/Study'\nimport StarDetails from '../../components/StarDetails/StarDetails'\nimport { NotFound } from '../../components/404/NotFound'\n\nclass App extends Component {\n\n  componentDidMount () {\n    const { fetchStarIds, isLoading } = this.props\n    const url = 'https://cors-anywhere.herokuapp.com/http://hubblesite.org/api/v3/images/all?page=2'\n\n    fetchStarIds(url, isLoading)\n  }\n  render() {\n    const { history, astronomicalObjects } = this.props\n    return (\n      <div className=\"App\">\n        <header\n          className=\"App-header\">\n          <h1 \n            className='title'>\n            <span\n            onClick={() => history.push('/hubble-bubble')} \n            className='bubble'>\n              Bubble\n            </span>  \n            <span\n            onClick={() => history.push('/hubble-bubble')} \n            className='shimmer'>Hubble </span>\n          </h1>\n          <NavLink \n            className='study'\n            to='/hubble-bubble/studytime'>\n            Need to Study???\n          </NavLink>\n        </header>\n        <Switch>\n          <Route exact path='/hubble-bubble' component={Header} />\n          <Route exact path='/hubble-bubble/gametime' component={Game} />\n          <Route path='/hubble-bubble/studytime/:id' render={({match}) => {\n            const star = astronomicalObjects.find(object => {\n              return object.id === parseInt(match.params.id)\n            })\n            return <StarDetails {...star}/>\n          }} />\n          <Route path='/hubble-bubble/studytime' component={Study} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    );\n  }\n}\nexport const mapStateToProps = state => ({\n  isLoading: state.isLoading,\n  astronomicalObjects: state.astronomicalObjects,\n})\nexport const mapDispatchToProps = dispatch => ({\n  fetchStarIds: (url, isLoading) => dispatch(fetchStarIds(url, isLoading))\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","import { starsReceived } from '../action-creators/astronomicalObjectsActions'\nimport { toggleLoading } from '../action-creators/toggleLoading'\nimport { errorReceived } from '../action-creators/errorReceived'\nimport { imagesFetch } from './imagesFetch'\n\nexport const fetchStarIds = (url, isLoading) => {\n  return async (dispatch) => {\n    if(!isLoading) {\n      dispatch(toggleLoading())\n    }\n    try {\n      const response = await fetch(url)\n      if(!response.ok) {\n        dispatch(errorReceived(response.message))\n      } else {\n        const starIds = await response.json()\n        const starData = await dispatch(imagesFetch(starIds))\n        dispatch(starsReceived(starData))\n        dispatch(toggleLoading())\n      }\n    } catch (e) {\n      dispatch(errorReceived(e.message))\n    }\n  }\n}","export const toggleLoading = () => ({\n  type: 'TOGGLE_LOADING'\n})","export const starsReceived = astronomicalObjects => ({\n  type: 'STARS_RECEIVED',\n  astronomicalObjects,\n})\n\nexport const toggleSelected = id => ({\n  type: 'TOGGLE_SELECTED',\n  id,\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { astronomicalObjectsReducer } from './astronomicalObjectsReducer'\nimport { isLoadingReducer } from './isLoadingReducer'\nimport { errorReducer } from './errorReducer'\nimport { popUpReducer } from './popUpReducer'\n\nconst rootReducer = combineReducers({\n  astronomicalObjects: astronomicalObjectsReducer,\n  isLoading: isLoadingReducer,\n  error: errorReducer,\n  popUp: popUpReducer,\n})\n\nexport default rootReducer;","export const astronomicalObjectsReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'STARS_RECEIVED':\n      return action.astronomicalObjects\n    case 'TOGGLE_SELECTED':\n      return state.map(star => star.id === action.id ? {...star, selected: !star.selected}: star)\n    default:\n      return state\n  }\n}","export const isLoadingReducer = (state = true, action) => {\n  switch(action.type) {\n    case 'TOGGLE_LOADING':\n      return state = !state\n    default:\n      return state\n  }\n}","export const errorReducer =(state = '', action ) => {\n  switch(action.type) {\n    case 'ERROR_RECEIVED':\n      return action.error\n    default:\n      return state\n  }\n}","export const popUpReducer = (state = false, action) => {\n  switch(action.type) {\n    case 'POPUP_TOGGLE':\n      return state = !state\n    default:\n      return state\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers'\nimport { createStore, applyMiddleware } from 'redux'\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}